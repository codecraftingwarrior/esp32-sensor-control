openapi: 3.0.3
info:
  title: API RESTFul - Capteur TTGO T-Display
  description: |-
    Cette API RESTful permet de contrôler et de surveiller les capteurs (température et luminosité) connectés à un microcontrôleur ESP32, ainsi que de gérer l'état d'une LED connectée à l'appareil. Elle offre des fonctionnalités permettant d'obtenir des informations des capteurs, de contrôler l'allumage, l'extinction et le changement d'état de la LED, et de définir un seuil de déclenchement basé sur les valeurs captées par les capteurs.
    
  termsOfService: ""
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://192.168.1.200/api/v1
tags:
  - name: Sensors
    description: Cette collection d'API offre la possibilité de gérer les capteurs et d'accéder aux informations relatives à leur état actuel. 
  - name: LEDs
    description: Cette collection d'API offre la possibilité de gérer les LEDs et d'accéder aux informations relatives à leur état actuel.
paths:
  /sensors:
    get:
      tags:
        - Sensors
      summary: Récupère les informations actuelles des capteurs.
      description: Récupère les informations actuelles des capteurs, notamment la température et la luminosité.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'
                  
  /sensors/{sensorType}/threshold:
    put:
      tags:
        - Sensors
      summary: Modifie la valeur seuil d'un capteur.
      description: Permet de modifier le seuil de déclenchement d'un capteur.
      parameters:
        - name: sensorType
          in: path
          description: Type de capteur à modifier le seuil (luminosity | temperature)
          required: true
          schema:
            type: string
            enum:
              - luminosity
              - temperature
      requestBody:
        description: Modifie la valeur seuil d'un capteur donnée
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor.Threshold.Update'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessResponse'
                  
  /leds:
    get:
      tags:
        - LEDs
      summary: Récupère les informations actuelles de tous les leds.
      description: Récupère les informations actuelles des leds du système.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Led'
                  
  /leds/{ledId}:
    put:
      tags:
       - LEDs
      summary: Permet d'allumer/éteindre une LED.
      description: Permet de contrôler l'allumage ou l'extinction d'une LED spécifique.
      parameters: 
        - name: ledId
          in: path
          description: identifiant du capteur à contrôler.
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Modifie l'etat d'une LED.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Led.Switch'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessResponse'
      
components:
  schemas:
    Sensor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          description: Nom du capteur
          example: "LM35"
        type:
          type: string
          description: Sensor type (température|luminosité)
          example: temperature
          enum:
            - temperature
            - luminosity
        isOn:
          type: boolean
          description: Sensor state
          example: false
        currentValue:
          type: integer
          format: int64
          example: 20
      
    Sensor.Threshold.Update:
      type: object
      properties:
        threshold:
          type: number
          format: float
          example: 20.69
          
    SuccessResponse:
      type: object
      properties:
        state:
          type: string
          example: success
          
    Led.Switch:
      type: object
      properties:
        newState:
            type: string
            description: Nouvel etat
            example: off
            enum:
              - on
              - off
      
    Led:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        color:
          type: string
          example: "green"
        brightness:
          type: number
          format: float
          example: 15.5
        isOn:
          type: boolean
          example: false
          